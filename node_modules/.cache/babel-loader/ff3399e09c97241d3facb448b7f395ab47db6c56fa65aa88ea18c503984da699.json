{"ast":null,"code":"var _jsxFileName = \"/home/Mr.Spector/Desktop/Todo-with-react/src/Todo/TodoList.js\";\nimport React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.createNewTodo = this.createNewTodo.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n  }\n  createNewTodo(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(t => t.id !== id)\n    });\n  }\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          task: updatedTask\n        };\n      }\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n  toggleCompletion(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          complete: updatedTask\n        };\n      }\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        id: todo.id,\n        task: todo.task,\n        removeTodo: this.remove,\n        updateTodo: this.update,\n        completed: todo.completed\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewTodoForm, {\n        createTodo: this.createNewTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default TodoList;","map":{"version":3,"names":["React","Component","Todo","NewTodoForm","jsxDEV","_jsxDEV","TodoList","constructor","props","state","todos","createNewTodo","bind","remove","update","newTodo","setState","id","filter","t","updatedTask","updatedTodos","map","todo","task","toggleCompletion","complete","render","removeTodo","updateTodo","completed","fileName","_jsxFileName","lineNumber","columnNumber","children","createTodo"],"sources":["/home/Mr.Spector/Desktop/Todo-with-react/src/Todo/TodoList.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\"\n\nclass TodoList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            todos: []\n        }\n        this.createNewTodo = this.createNewTodo.bind(this)\n        this.remove = this.remove.bind(this)\n        this.update = this.update.bind(this)\n    }\n\n    createNewTodo(newTodo) {\n        this.setState({\n            todos: [...this.state.todos, newTodo]\n        })\n    }\n\n    remove(id) {\n        this.setState({\n            todos: this.state.todos.filter(t => t.id !== id)\n        })\n    }\n\n    update(id, updatedTask) {\n        const updatedTodos = this.state.todos.map(todo => {\n            if (todo.id === id) {\n                return { ...todo, task: updatedTask }\n            }\n            return todo;\n        })\n        this.setState({ todos: updatedTodos })\n    }\n\n    toggleCompletion(id, updatedTask) {\n        const updatedTodos = this.state.todos.map(todo => {\n            if (todo.id === id) {\n                return { ...todo, complete: updatedTask }\n            }\n            return todo;\n        })\n        this.setState({ todos: updatedTodos })\n    }\n    render() {\n\n        const todos = this.state.todos.map(todo => {\n            return <Todo key={todo.id} id={todo.id} task={todo.task}\n                removeTodo={this.remove} updateTodo={this.update}\n                completed={todo.completed}\n            />\n        }\n        )\n\n        return (\n            <div>\n                <h1>Todo App</h1>\n\n                <ul>\n                    {todos}\n                </ul>\n\n\n                <NewTodoForm createTodo={this.createNewTodo} />\n            </div>\n        )\n    }\n}\n\nexport default TodoList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}